{"version":3,"sources":["../../app-es6/services/NegociacaoService.js"],"names":["HttpService","ConnectionFactory","NegociacaoDao","Negociacao","NegociacaoService","_http","Promise","all","obterNegociacoesDaSemana","obterNegociacoesDaSemanaAnterior","obterNegociacoesDaSemanaRetrasada","then","negociacoes","reduce","arrayAchatado","array","concat","catch","Error","error","get","map","Date","objeto","data","quantidade","valor","console","log","negociacao","getConnection","connection","dao","adiciona","erro","listaTodos","apagaTodos","listaAtual","obterNegociacoes","filter","some","isEquals","negociacaoExistente","conole"],"mappings":"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","file":"NegociacaoService.js","sourcesContent":["import {HttpService} from './HttpService';\r\nimport {ConnectionFactory} from './ConnectionFactory';\r\nimport {NegociacaoDao} from '../dao/NegociacaoDao';\r\nimport {Negociacao} from '../models/Negociacao';\r\n\r\nexport class NegociacaoService {\r\n\r\n    constructor() {\r\n        this._http = new HttpService();\r\n    }\r\n\r\n    obterNegociacoes() {\r\n\r\n        return Promise.all([\r\n            this.obterNegociacoesDaSemana(),\r\n            this.obterNegociacoesDaSemanaAnterior(),\r\n            this.obterNegociacoesDaSemanaRetrasada()\r\n        ]).then(negociacoes => {\r\n\r\n            return negociacoes\r\n                .reduce((arrayAchatado, array) => arrayAchatado.concat(array), [])\r\n        }).catch(error => {\r\n            throw new Error(error);\r\n        });\r\n    }\r\n\r\n    obterNegociacoesDaSemana() {\r\n\r\n        return this._http\r\n            .get('negociacoes/semana')\r\n            .then(negociacoes => {\r\n                return negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                throw new Error('Não foi possível obter as negociações da semana');\r\n            });\r\n    }\r\n\r\n    obterNegociacoesDaSemanaAnterior() {\r\n\r\n        return this._http\r\n            .get('negociacoes/anterior')\r\n            .then(negociacoes => {\r\n                return negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                throw new Error('Não foi possível obter as negociações da semana anterior');\r\n            });\r\n    }\r\n\r\n    obterNegociacoesDaSemanaRetrasada() {\r\n\r\n        return this._http\r\n            .get('negociacoes/retrasada')\r\n            .then(negociacoes => {\r\n                return negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                throw new Error('Não foi possível obter as negociações da semana retrasada');\r\n            });\r\n    }\r\n\r\n    cadastra(negociacao) {\r\n\r\n        return ConnectionFactory\r\n            .getConnection()\r\n            .then(connection => new NegociacaoDao(connection))\r\n            .then(dao => dao.adiciona(negociacao))\r\n            .then(() => 'Negociação adicionada com sucesso')\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                throw new Error('Não foi possível adicionar a negociação')\r\n            });\r\n    }\r\n\r\n    lista() {\r\n\r\n        return ConnectionFactory\r\n            .getConnection()\r\n            .then(connection => new NegociacaoDao(connection))\r\n            .then(dao => dao.listaTodos())\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                throw new Error('Não foi possível obter as negociações');\r\n            });\r\n    }\r\n\r\n    apaga() {\r\n\r\n        return ConnectionFactory\r\n            .getConnection()\r\n            .then(connection => new NegociacaoDao(connection))\r\n            .then(dao => dao.apagaTodos())\r\n            .then(() => 'Negociações apagadas com sucesso')\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                throw new Error('Não foi possível apagar as negociações');\r\n            });\r\n    }\r\n\r\n    importa(listaAtual) {\r\n\r\n        return this.obterNegociacoes()\r\n            .then(negociacoes =>\r\n                negociacoes.filter(negociacao =>\r\n                    !listaAtual.some(negociacaoExistente =>\r\n                        negociacao.isEquals(negociacaoExistente))\r\n                )\r\n            )\r\n            .catch(error => {\r\n                conole.log(error);\r\n                throw new Error('Não foi possível buscar negociações para importar');\r\n            });\r\n    }\r\n}\r\n"]}