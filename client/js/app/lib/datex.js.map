{"version":3,"sources":["../../app-es6/lib/datex.js"],"names":["DateHelper","data","getDate","getMonth","getFullYear","texto","test","Error","Date","split","reverse","map","item","index"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAMA,sB;;;;;;;mDAEoBC,I,EAAM;AACxB,+BAAUA,KAAKC,OAAL,EAAV,UAA4BD,KAAKE,QAAL,KAAgB,CAA5C,UAAiDF,KAAKG,WAAL,EAAjD;AACH;;;mDAEqBC,K,EAAO;;AAEzB,4BAAI,CAAC,wBAAwBC,IAAxB,CAA6BD,KAA7B,CAAL,EAA0C;AACtC,kCAAM,IAAIE,KAAJ,CAAU,kCAAV,CAAN;AACH;;AAED,kEAAWC,IAAX,mCAAmBH,MAAMI,KAAN,CAAY,GAAZ,EAAiBC,OAAjB,GAA2BC,GAA3B,CAA+B,UAACC,IAAD,EAAOC,KAAP;AAAA,mCAAiBD,OAAOC,QAAQ,CAAhC;AAAA,yBAA/B,CAAnB;AACH","file":"datex.js","sourcesContent":["class DateHelper {\r\n\r\n    static dataParaString(data) {\r\n        return `${data.getDate()}/${data.getMonth()+1}/${data.getFullYear()}`;\r\n    }\r\n\r\n    static stringParaData(texto) {\r\n\r\n        if (!/^\\d{2}\\/\\d{2}\\/\\d{4}$/.test(texto)) {\r\n            throw new Error('Deve estar no formato DD/MM/AAAA');\r\n        }\r\n\r\n        return new Date(...texto.split('/').reverse().map((item, index) => item - index % 2));\r\n    }\r\n\r\n}\r\n"]}